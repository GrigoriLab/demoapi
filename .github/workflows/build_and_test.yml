name: Build docker image and run testcases
on:
  push:
    branches:
      - main
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}
  KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
  KUBE_NAMESPACE: production
  ECR_REPOSITORY: demo_api

jobs:
  Run-Tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, test, tag, and push demo api image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          IMAGE_TAG=$(echo ${{ github.sha }} | head -c 7)
          IMAGE_URL=$ECR_REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
          docker build -t $IMAGE_URL .
          docker run --rm $IMAGE_URL python manage.py test apps.api
          docker push $IMAGE_URL
#          mkdir -p ~/.kube
#          echo "${{ env.KUBE_CONFIG_DATA }}" > ~/.kube/config
#          sed -e 's/IMAGE_URL/${IMAGE_URL}/g' deployment.yaml
      - name: Deploy new docker image
        uses: tuongaz/kubctl-eks-action
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_BASE_64_ENCODED }}
        with:
          args: set image --record deployment/pod-name pod-name=844540777587.dkr.ecr.us-west-2.amazonaws.com/demo_api:3df2fa4
      #- name: Deploy Kubernetes
      #  run: |
      #    kubectl apply -f deployment.yaml
